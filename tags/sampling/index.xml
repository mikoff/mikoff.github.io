<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sampling on Aleksandr Mikoff&#39;s blog</title>
    <link>https://mikoff.github.io/tags/sampling/</link>
    <description>Recent content in sampling on Aleksandr Mikoff&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 31 Mar 2020 19:59:26 +0300</lastBuildDate>
    
	<atom:link href="https://mikoff.github.io/tags/sampling/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Particle Filter: localizing the robot</title>
      <link>https://mikoff.github.io/posts/particle-filter.md/</link>
      <pubDate>Tue, 31 Mar 2020 19:59:26 +0300</pubDate>
      
      <guid>https://mikoff.github.io/posts/particle-filter.md/</guid>
      <description>Particle filter In this post I would like to show the basic implementation of the Particle filter for robot localization using distance measurements to the known anchors, or landmarks. So why particle filter is so widely used? It&amp;rsquo;s widespread use lies in its versatile and universalism. It is able to:
 Work with nonlinearities. Non-gaussian distributions. Easily fuse various information sources. Simulate the processes.  The whole implementation takes less then 100 lines of Python code and shown in the end of the following post.</description>
    </item>
    
    <item>
      <title>Inverse transform sampling</title>
      <link>https://mikoff.github.io/posts/inverse-transform-sampling.md/</link>
      <pubDate>Sun, 09 Feb 2020 14:56:13 +0300</pubDate>
      
      <guid>https://mikoff.github.io/posts/inverse-transform-sampling.md/</guid>
      <description>Probability density and cumulative distribution functions Probability density function $f(x)$ is a function, which allows us to evaluate the probability that the sample, drawn from the distribution, will be equal to the value $X$. Also we can use PDF to calculate the probability that the randomly drawn sample from distribution will be in certain range, for example, $a \leq X \leq b$. This probability equals to the area under the PDF curve on the given interval and can be calculated by integration: $$ P(a \leq X \leq b) = \int _a^b f(x) dx $$</description>
    </item>
    
  </channel>
</rss>